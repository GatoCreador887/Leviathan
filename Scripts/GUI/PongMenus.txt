FileType: Objectfile;
ScriptType: gui;
ScriptName: PongMenus;
RocketScript: Pong.rml;

objects {
    // this keeps the GUI always on //
    o GuiCollection "OnKeeper"{
        l params{
            Enabled = true;
            KeepsGUIOn = true;
        }
    }
    // keeps the menu background visible while in menus //
    o GuiCollection "Menus"{
        l params{
            Enabled = true;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("Menus");
                
                #include "DefaultCollectionScript.as";
            @%};
        }
    }
    // Pause menu, which can only be enabled during gameplay //
    o GuiCollection "PauseMenu"{
        l params{
            Enabled = false;
            AllowEnable = false;
            ToggleOn = "ESC";
        }
        s scripts{
            body{
                // We need some special functionality
                // set's the visibility of the object //
                void HandleSet(GuiCollection@ Instance, bool hidden){
                    // fetch pointers
                    GuiLoadedSheet@ tmpsheet = Instance.GetOwningSheet();
                    RocketElement@ maincontainer = tmpsheet.GetElementByID("PauseMenu");
                    
                    if(hidden){
                        maincontainer.SetProperty("visibility", "hidden");
                        maincontainer.SetProperty("display", "none");
                    } else {
                        maincontainer.SetProperty("visibility", "visible");
                        maincontainer.SetProperty("display", "block");
                    }
                }

                [@Listener="OnHide"]
                int OnHide(GuiCollection@ Instance, Event@ event){
                    // we need to hide our elements //
                    HandleSet(Instance, true);
                    // Resume game //
                    return 1;
                }

                [@Listener="OnShow"]
                int OnShow(GuiCollection@ Instance, Event@ event){
                    // we need to show our elements //
                    HandleSet(Instance, false);
                    // Pause the game //
                    return 1;
                }
            @%};
        }
    
    }
    
    // groups together the top level menu //
    o GuiCollection "TopLevelMenu"{
        l params{
            Enabled = true;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("TopLevelMenu");
                
                #include "DefaultCollectionScript.as";
                
            @%};
        }
    }
    
    // Displayed while waiting for connection //
    o GuiCollection "ServerConnectScreen"{
        l params{
            Enabled = false;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("ServerConnectScreen");
                
                #include "DefaultCollectionScript.as";
            @%};
        }
    }
    
    // Server settings configured here //
    o GuiCollection "ServerStartScreen"{
        l params{
            Enabled = false;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("ServerStartScreen");
                
                #include "DefaultCollectionScript.as";
            @%};
        }
    }
    
    // during game HUD //
    o GuiCollection "GameplayHUD"{
        l params{
            Enabled = false;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("GameplayHUD");
                
                #include "DefaultCollectionScript.as";
            @%};
        }
    }
    
    o GuiCollection "MatchScoresScreen"{
        l params{
            Enabled = false;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("MatchEndScreen");
                
                #include "DefaultCollectionScript.as";
            @%};
        }
    }
    
    // Moves the game to the lobby screen when required //
    o GuiCollection "LobbyScreen"{
        l params{
            Enabled = false;
        }
        s scripts{
            body{
                // we can just include our common code //
                string ROCKETOBJECTID("LobbyScreen");
                
                #include "DefaultCollectionScript.as";
                
                // The events used to toggle lobby when needed //
                [@Listener="Generic", @Type="EnterLobby"]
                int OnEnterLobby(BaseGuiObject@ Instance, GenericEvent@ event){
                
                    HandleSet(Instance, true);
                    return 1;
                }
                
                [@Listener="Generic", @Type="ExitLobby"]
                int OnEnterLobby(BaseGuiObject@ Instance, GenericEvent@ event){
                
                    HandleSet(Instance, false);
                    return 1;
                }
            @%};
        }
    }
    
    // ------------------ GuiObjects ------------------ //
    o GuiObject "ServerStartButton"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // try to start the game if possible //
                    GetPongGame().StartServer();
                    
                    // Show right screen //
                    Instance.GetOwningManager().SetCollectionState("ServerConnectScreen", true);
                    Instance.GetOwningManager().SetCollectionState("Menus", false);
                    Instance.GetOwningManager().SetCollectionState("ServerStartScreen", false);
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "GameQuitButton"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // close the game //
                    GetPongBase().Quit();
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "ToServerStartScreen"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    Instance.GetOwningManager().SetCollectionState("ServerStartScreen", true);
                    Instance.GetOwningManager().SetCollectionState("TopLevelMenu", false);
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "BackFromServerStartScreen"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // hide other collections and display the main menu screen //
                    Instance.GetOwningManager().SetCollectionState("TopLevelMenu", true);
                    Instance.GetOwningManager().SetCollectionState("ServerStartScreen", false);

                    return 1;
                }
            @%}; 
        }
    }
    
    o GuiObject "HUDPlayerScoresHandler"{
        l params{
            RocketID = "HUDPlayerScoreList";
        }
        s scripts{
            body{
                #include "ScoreboardUpdateScript.as";
            
                // we use generic event to receive game start and score update events //
                [@Listener="Generic", @Type="GameStart"]
                int OnGameStarted(BaseGuiObject@ Instance, GenericEvent@ event){
                    // Call update function which handless everything related to scoreboard //
                    UpdateScoreboard(Instance);
                    return 1;
                }
                
                [@Listener="Generic", @Type="ScoreUpdated"]
                int OnScoresUpdated(BaseGuiObject@ Instance, GenericEvent@ event){
                    // Call update function which handless everything related to scoreboard //
                    UpdateScoreboard(Instance);
                    return 1;
                }
                
            @%};
        }
    }
    
    o GuiObject "PauseScreenBackToMenuButton"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // hide other collections and display the main menu screen //
                    Instance.GetOwningManager().SetCollectionState("TopLevelMenu", true);
                    Instance.GetOwningManager().SetCollectionState("Menus", true);
                    Instance.GetOwningManager().SetCollectionState("GameplayHUD", false);
                    Instance.GetOwningManager().SetCollectionState("PauseMenu", false);
                    
                    GetPongGame().Disconnect();
                    
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "PauseScreenQuitButton"{
        s scripts{
            body{

                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // close the game //
                    GetPongBase().Quit();

                    return 1;
                }
            @%};  
        }
    }
    
    o GuiObject "ClosePauseMenu"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // Hide the pause menu collection //
                    Instance.GetOwningManager().SetCollectionState("PauseMenu", false);
                    return 1;
                }
            @%};
        }
    }
    // ------------------ Game lobby screen ------------------ //
    o GuiObject "LobbyDisconnect"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // close the game //
                    GetPongGame().Disconnect();
                    
                    return 1;
                }
            @%};
        }
    }
    
    // ------------------ Connection screen ------------------ //
    o GuiObject "ConnectionStatusUpdate"{
        s scripts{
            body{
                // Generics event to detect update //
                [@Listener="Generic", @Type="ConnectionStatusMessage"]
                int OnGameEnd(BaseGuiObject@ Instance, GenericEvent@ event){
                    // We can get the winning team number for the event //
                    string message = event.GetNamedVars().GetSingleValueByName("Message");
                    
                    Instance.SetInternalElementRML(message);
                    return 1;
                }
            @%};
        }
    }
    
    
    
    
    // ------------------ Match end screen ------------------ //
    o GuiObject "WinningPlayersHandler"{
        l params{
            RocketID = "PlayerWinnerList";
        }
        s scripts{
            body{
                #include "ScoreboardUpdateScript.as"
                
                // Generics event to detect game end //
                [@Listener="Generic", @Type="MatchEnded"]
                int OnGameEnd(BaseGuiObject@ Instance, GenericEvent@ event){
                    // We can get the winning team number for the event //
                    int winningteam = event.GetNamedVars().GetSingleValueByName("WinningTeam");
                    
                    string text = "<p>Team "+winningteam;
                    
                    // Find the players in the winning team //
                    PlayerSlot@ slot = GetPongBase().GetSlot(winningteam);
                    // Loop through and print all players in the team //
                    while(true){
                        text += GenerateScoreboardPlayer(slot);

                        @slot = slot.GetSplit();
                        if(slot is null)
                            break;
                    }
                    text += "</p>";
                    Instance.SetInternalElementRML(text);
                    // Make it visible //
                    Instance.GetOwningManager().SetCollectionState("MatchScoresScreen", true);
                    Instance.GetOwningManager().SetCollectionState("GameplayHUD", false);
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "WinningScreenScoreboard"{
        s scripts{
            body{
                #include "ScoreboardUpdateScript.as";
                
                // Generic event to detect game end //
                [@Listener="Generic", @Type="MatchEnded"]
                int OnGameEnd(BaseGuiObject@ Instance, GenericEvent@ event){
                    // Call update function which handless everything related to scoreboard //
                    UpdateScoreboard(Instance);
                    return 1;
                }
            @%};
        }
    }
    
    
    o GuiObject "WinningGameToLobby"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // hide other collections and display the main menu screen //
                    Instance.GetOwningManager().SetCollectionState("MatchScoresScreen", false);
                    Instance.GetOwningManager().SetCollectionState("GameLobby", true);
                    Instance.GetOwningManager().SetCollectionState("Menus", true);
                    
                    GetPongBase().GameMatchEnded();
                    GetPongGame().MoveBackToLobby();
                    
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "WinningGameBackToMenuButton"{
        s scripts{
            body{
                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // hide other collections and display the main menu screen //
                    Instance.GetOwningManager().SetCollectionState("MatchScoresScreen", false);
                    Instance.GetOwningManager().SetCollectionState("MainMenu", true);
                    Instance.GetOwningManager().SetCollectionState("Menus", true);
                    
                    GetPongGame().Disconnect();
                    
                    return 1;
                }
            @%};
        }
    }
    
    o GuiObject "GameQuitFromWinScreen"{
        s scripts{
            body{

                [@Listener="OnClick"]
                int OnClick(BaseGuiObject@ Instance, RocketEvent@ event){
                    // close the game //
                    GetPongBase().Quit();

                    return 1;
                }
            @%};
        }
    }

    
    // ------------------ Game setup screen ------------------ //
    
}
