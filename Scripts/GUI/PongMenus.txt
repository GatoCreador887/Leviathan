GUIBaseFile = "PongMenu.layout";
GUIAnimations = [["PongMenus.anims"]];


// ------------------ Templates for GUI objects ------------------ //
template<GCollectName, CEGUITargetWind, GCollectEnabled> PGCTemplate: 
    o GuiCollection "GCollectName"{
        l params{
            Enabled = GCollectEnabled;
            AutoTarget = "CEGUITargetWind";
        }
    }
    
// Close button support for all kinds of windows //
template<NameOfTarget, CollectionToGoTo, CollectionToDisable> GUIFrameWindowCloseButtonDefault: 
    o GuiObject "NameOfTarget"{
        s{
            [@Listener="OnCloseClicked"]
            bool GoBackToMainMenu(GuiObject@ instance){
                
                // Go back to the main menu //
                instance.GetOwningManager().SetCollectionState("CollectionToGoTo", true);
                instance.GetOwningManager().SetCollectionState("CollectionToDisable", false);
                return true;
            }
        @%};
    }
    
// Back button for menus //
template<NameOfTarget, CollectionToGoTo, CollectionToDisable> GUIMenuBackButtonDefault: 
    o GuiObject "NameOfTarget"{
        s{
            [@Listener="OnClick"]
            bool GoBackToMainMenu(GuiObject@ instance){
                
                // Go back to the main menu //
                instance.GetOwningManager().SetCollectionState("CollectionToGoTo", true);
                instance.GetOwningManager().SetCollectionState("CollectionToDisable", false);
                return true;
            }
        @%};
    }


// ------------------ Non-functional objects ------------------ //
// This keeps the GUI always on //
o GuiCollection "OnKeeper"{
    l params{
        Enabled = true;
        KeepsGUIOn = true;
    }
}
// ------------------ MenuWindow ------------------ //
template<> PGCTemplate<MenuWindow, "MenuWindow", true>


o GuiObject "MenuWindow/PongVersion"{
    s{
        [@Listener="OnInit"]
        int SetVersion(GuiObject@ instance, Event@ event){
            // Set the text as the current Pong version //
            
            string newtext = GetPongVersion();
           
            instance.GetOwningManager().GetWindowByName(instance.GetName()).SetText(newtext);
            
            return 1;
        }
    @%};
}

o GuiObject "MenuWindow/LeviathanVersion"{
    s{
        [@Listener="OnInit"]
        int SetVersion(GuiObject@ instance, Event@ event){
        
            // Set the text as the current version //
            string newtext = "Leviathan "+GetLeviathanVersion();
            
            instance.GetOwningManager().GetWindowByName(instance.GetName()).SetText(newtext);
            
            
            return 1;
        }
    @%};
}

// ------------------ Main menu objects ------------------ //
o GuiCollection "TopLevelMenu"{
    l params{
        Enabled = true;
        AutoTarget = "MenuWindow/TopLevelMenu";
        AutoAnimationIn = [[AutoTarget], [PopIn], ["MenuWindow/TopLevelMenu/StartServerButton"], [PopIn],
            ["MenuWindow/TopLevelMenu/BrowseGamesButton"], [PopIn]];
        AutoAnimationOut = [[AutoTarget], [SinkAway], ["MenuWindow/TopLevelMenu/StartServerButton"], [SinkAway],
            ["MenuWindow/TopLevelMenu/BrowseGamesButton"], [SinkAway]];
    }
}
// To the server start screen button //
o GuiObject "MenuWindow/TopLevelMenu/StartServerButton"{
    s{
        [@Listener="OnClick"]
        bool SetVersion(GuiObject@ instance){
        
            // Go to the StartServerMenu //
            instance.GetOwningManager().SetCollectionState("StartServerMenu", true);
            instance.GetOwningManager().SetCollectionState("TopLevelMenu", false);
            return true;
        }
    @%};
}
// To the server browser screen button //
o GuiObject "MenuWindow/TopLevelMenu/BrowseGamesButton"{
    s{
        [@Listener="OnClick"]
        bool SetVersion(GuiObject@ instance){
        
            // Go to the StartServerMenu //
            instance.GetOwningManager().SetCollectionState("ServerBrowserMenu", true);
            instance.GetOwningManager().SetCollectionState("TopLevelMenu", false);
            return true;
        }
    @%};
}
// To the direct connect screen button //


// To the options menu //


// Quit the game //


// ------------------ Server start screen ------------------ //
o GuiCollection "StartServerMenu"{
    l params{
        Enabled = false;
        AutoTarget = "MenuWindow/StartServerMenu";
        AutoAnimationIn = [[AutoTarget], [PopIn], ["MenuWindow/StartServerMenu/BackToMainButton"], [PopIn]];
        AutoAnimationOut = [[AutoTarget], [SinkAway], ["MenuWindow/StartServerMenu/BackToMainButton"], [SinkAway]];
    }
}


// Normal closing things //
template<> GUIFrameWindowCloseButtonDefault<"MenuWindow/StartServerMenu", "TopLevelMenu", "StartServerMenu">
template<> GUIMenuBackButtonDefault<"MenuWindow/StartServerMenu/BackToMainButton", "TopLevelMenu", "StartServerMenu">

// ------------------ Server browser screen ------------------ //
o GuiCollection "ServerBrowserMenu"{
    l params{
        Enabled = false;
        AutoTarget = "MenuWindow/ServerBrowserMenu";
        AutoAnimationIn = [[AutoTarget], [PopIn], ["MenuWindow/ServerBrowserMenu/BackToMainButton"], [PopIn],
            ["MenuWindow/ServerBrowserMenu/NotDone"], [PopIn]];
        AutoAnimationOut = [[AutoTarget], [SinkAway], ["MenuWindow/ServerBrowserMenu/BackToMainButton"], [SinkAway],
            ["MenuWindow/ServerBrowserMenu/NotDone"], [SinkAway]];
    }
}

// Normal closing things //
template<> GUIFrameWindowCloseButtonDefault<"MenuWindow/ServerBrowserMenu", "TopLevelMenu", "ServerBrowserMenu">
template<> GUIMenuBackButtonDefault<"MenuWindow/ServerBrowserMenu/BackToMainButton", "TopLevelMenu", "ServerBrowserMenu">


// ------------------ Server connection screen ------------------ //
template<> PGCTemplate<DirectConnectMenu, "", false>


// ------------------ Connect screen objects ------------------ //
template<> PGCTemplate<ConnectScreen, "", false>


// ------------------ Lobby screen objects ------------------ //
template<> PGCTemplate<LobbyScreen, "", false>


// ------------------ During gameplay objects ------------------ //
template<> PGCTemplate<GameplayHUD, "", false>

// ------------------ Match end screen objects ------------------ //
template<> PGCTemplate<MatchEndScreen, "", false>

// ------------------ Pause menu objects ------------------ //
o GuiCollection "PauseMenu"{
    l params{
        Enabled = false;
        AllowEnable = false;
        ToggleOn = "ESC";
        AutoTarget = "";
    }
}

